<launch>

    <arg name="rtabmap_args"    default="--delete-db-on-start"/>
    <arg name="rgb_topic"       default="/ROBOTIKA_X2/optical/image_raw"/>
    <arg name="depth_topic"     default="/ROBOTIKA_X2/front/optical/depth"/>
    <arg name="camera_info_topic"   default="/ROBOTIKA_X2/optical/camera_info" />
    <arg name="odom_topic"            default="/odometry/fused"/>
    <arg name="scan_cloud_topic" default="/ROBOTIKA_X2/rgbd_camera/depth/points"/>
    <arg name="scan_topic" default="/ROBOTIKA_X2/front_scan"/>

    <!-- RTABmap main node -->
	<node name="rtabmap" pkg="rtabmap_ros" type="rtabmap" output="screen" args="$(arg rtabmap_args)">
	
	    <param name="subscribe_rgb"       type="bool" value="true"/>    
	    <param name="subscribe_depth"     type="bool" value="true"/>    
        <param name="subscribe_odom"      type="bool" value="true"/>    
        <param name="subscribe_rgbd"      type="bool" value="false"/> 
        <param name="subscribe_scan"      type="bool" value="true"/> 
        <param name="queue_size"          type="int" value="20"/>
        <param name="tf_delay"            type="string" value="0.001"/> <!--Rate at which the TF from /map to /odom is published (20 Hz).--> 
        <param name="approx_sync"       value="true"/>
        <param name="RGBD/OptimizeFromGraphEnd" type="string" value="true"/> <!-- Optimize graph from initial node so /map -> /odom transform will be generated -->
        <param name="frame_id"           type="string" value="ROBOTIKA_X2"/>
        <param name="wait_for_transform" type="bool" value="true"/>
        <param name="wait_for_transform_duration" type="string" value="0.5"/>

        <remap from="rgb/image" to="$(arg rgb_topic)"/>
        <remap from="depth/image"   to="$(arg depth_topic)"/>
        <remap from="rgb/camera_info" to="$(arg camera_info_topic)"/>
        <remap from="odom"     to="$(arg odom_topic)"/>
        <remap from="scan"     to="$(arg scan_topic)"/>
        <!-- output -->
  	    <remap from="grid_map" to="/map"/>
        

	</node>



</launch>